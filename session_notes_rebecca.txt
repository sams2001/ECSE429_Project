CHARTER: Identify capabilities and areas of potential instability of the “rest api todo list manager”. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TOOLS: Postman

~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TESTER: Rebecca Mizrahi (260975001)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~

DEPLOYED WITH: java -jar runTodoManagerRestAPI-1.5.5.jar

~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Start time: 10:00 PM


Test: GET all todos
curl -v http://localhost:4567/todos

* Connected to localhost (::1) port 4567 (#0)
> GET /todos HTTP/1.1
> Host: localhost:4567
> User-Agent: curl/7.77.0
> Accept: */*
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< Date: Wed, 08 Feb 2023 03:06:34 GMT
< Content-Type: application/json
< Transfer-Encoding: chunked
< Server: Jetty(9.4.z-SNAPSHOT)
< 
* Connection #0 to host localhost left intact
{"todos":[{"id":"2","title":"file paperwork","doneStatus":"false","description":"","tasksof":[{"id":"1"}]},{"id":"1","title":"scan paperwork","doneStatus":"false","description":"","tasksof":[{"id":"1"}],"categories":[{"id":"1"}]}]}

	Note: will condense header in following notes.


Test: GET todos by existing ids

curl -v http://localhost:4567/todos/1

> GET /todos/1 HTTP/1.1
< HTTP/1.1 200 OK
< Date: Wed, 08 Feb 2023 03:09:27 GMT
{"todos":[{"id":"1","title":"scan paperwork","doneStatus":"false","description":"","tasksof":[{"id":"1"}],"categories":[{"id":"1"}]}]}


curl -v http://locddalhost:4567/todos/2

	Similar output.


Test: todos with non-existing ids

curl -v http://localhost:4567/todos/3

> GET /todos/3 HTTP/1.1
< HTTP/1.1 404 Not Found
{"errorMessages":["Could not find an instance with todos/3"]}%

 
Test: todos head

curl -v -I http://localhost:4567/todos

> HEAD /todos HTTP/1.1
< HTTP/1.1 200 OK

	No response.
	Switching to Postman.


Test: POST new todo with id 3
{
  "id": "3",
  "title": "remove paperwork",
  "doneStatus": false,
  "description": "",
  "tasksof": [
    {
      "id": "1"
    }
  ],
  "categories": [
    {
      "id": "1"
    }
  ]
}

< 400 Bad Request
< Error Message: "Invalid Creation: Failed Validation: Not allowed to create with id"

	Adjusted input by removing id JSON field.

< 201 Created
{
    "id": "22",
    "title": "file paperwork",
    "doneStatus": "false",
    "description": "",
    "tasksof": [
        {
            "id": "1"
        }
    ],
    "categories": [
        {
            "id": "1"
        }
    ]
}

	Creates new todo with id 22. Should have id 2.
	Repeating this test results in a new todo with id 23. 
	If 22 and 23 are deleted, the next todo has id 24, leaving todos with ids 1 and 24.  
	
Test: POST todo with id 2 new title

POST http://localhost:4567/todos/2 
{
    "id": 2,
    "title": "new title",
    "doneStatus": false,
    "description": "",
    "tasksof": [
        {
            "id": "1"
        }
    ]
}


Test: PUT todo with id 2 new title

< 200 OK
Title changed.


Test: PUT new id on todo

PUT http://localhost:4567/todos/2
{
    "id": 3,
    "title": "file paperwork",
    "doneStatus": false,
    "description": "",
    "tasksof": [
        {
            "id": "1"
        }
    ]
}

< 200 OK
No change in todo, id remains 2.

Test: delete

DELETE http://localhost:4567/todos/2

< 200 OK
Works as expected.



